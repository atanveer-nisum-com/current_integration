#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {

        # common proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # listen       80;
        # server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # api-version
        set $api_ver '/api/v1/';

        #app-fcc conf
        # port
        set $fcc_port 8081;
        # ip
        set $fcc_host_ip 127.0.0.1;
        # base url
        set $fcc_proxy_url "http://${fcc_host_ip}:${fcc_port}";

        # app-user conf
        # port
        set $user_port 8082;
        # ip
        set $user_host_ip 127.0.0.1;
        # base url
        set $user_proxy_url "http://${user_host_ip}:${user_port}";

        # app-promotions conf
        # port
        set $promotions_port 8084;
        # ip
        set $promotions_ip 127.0.0.1;
        # base url
        set $promotions_proxy_url "http://${promotions_ip}:${promotions_port}";

        # app-backbone conf
        # port
        set $backbone_port 3000;
        # ip
        set $backbone_ip 127.0.0.1;
        # base url
        set $backbone_proxy_url "http://${backbone_ip}:${backbone_port}";

        location ~* ^/api/v1/(co.*|st.*|us.*)$ {
            rewrite ^/api/v1/(.*)$ /$1 break;
            proxy_pass $user_proxy_url;
            proxy_redirect off;
        }

		# location /api/v1/countries/ {
		# 	proxy_pass  http://127.0.0.1:8082;
		# }
		
		# location /api/v1/states/ {
		# 	proxy_pass  http://127.0.0.1:8082;
		# }
		
		# location /api/v1/user/ {
		# 	proxy_pass  http://127.0.0.1:8082;
		# }
		
		# location /api/v1/users/ {
		# 	proxy_pass  http://127.0.0.1:8082;
		# }
		
        location ~* ^/api/v1/(pro.*|cat.*)$ {
            rewrite ^/api/v1/(.*)$ /$1 break;
            proxy_pass $fcc_proxy_url;
            proxy_redirect off;
        }

		# location /api/v1/products {
		# 	proxy_pass "${fcc_proxy_url}/products";
		# }
		
		# location /api/v1/categories/ {
		# 	proxy_pass  http://127.0.0.1:8081;
		# }
		
        location ~* ^/api/v1/(dis.*)$ {
            rewrite ^/api/v1/(.*)$ /$1 break;
            proxy_pass $promotions_proxy_url;
            proxy_redirect off;
        }

		# location /api/v1/discount/products/ {
		# 	proxy_pass  http://127.0.0.1:8084;
		# }
		
		# location /api/v1/discount/categories/ {
		# 	proxy_pass  http://127.0.0.1:8084;
		# }
        location / {
            # root   html;
            # index  index.html index.htm;
            proxy_pass $backbone_proxy_url;
        }
		
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
